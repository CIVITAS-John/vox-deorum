#!/usr/bin/env node

import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

// Get current directory
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);
const dir = __dirname;
const files = fs.readdirSync(dir)
  .filter(file => file.endsWith('.ts') && file !== 'index.ts')
  .sort();

// Generate import statements and mapping entries
const imports = [];
const mappingEntries = [];

files.forEach(file => {
  const basename = path.basename(file, '.ts');
  imports.push(`import { ${basename} } from './${basename}.js';`);
  mappingEntries.push(`  '${basename}': ${basename},`);
});

// Generate the index.ts content
const content = `// Auto-generated file - DO NOT EDIT
// Generated by generate-index.js

${imports.join('\n')}

export const eventSchemas = {
${mappingEntries.join('\n')}
};

export type EventName = keyof typeof eventSchemas;
`;

// Write the index.ts file
const indexPath = path.join(dir, 'index.ts');
fs.writeFileSync(indexPath, content, 'utf8');

console.log(`âœ“ Generated index.ts with ${files.length} event schemas`);
console.log(`  Exported mapping: eventSchemas`);